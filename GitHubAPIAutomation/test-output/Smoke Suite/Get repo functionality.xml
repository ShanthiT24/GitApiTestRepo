<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="1" hostname="Shanti-Windows-Laptop" failures="5" tests="8" name="Get repo functionality" time="4.866" errors="0" timestamp="2024-03-31T20:50:17 PDT">
  <testcase classname="org.github.tests.ValidateGetRepo_Functionality" name="validateGetAllRepositories" time="2.079">
    <failure type="org.json.JSONException" message="A JSONObject text must begin with &amp;apos;{&amp;apos; at 1 [character 2 line 1]">
      <![CDATA[org.json.JSONException: A JSONObject text must begin with '{' at 1 [character 2 line 1]
at org.json.JSONTokener.syntaxError(JSONTokener.java:433)
at org.json.JSONObject.<init>(JSONObject.java:195)
at org.github.utils.JsonSchemaValidate.validateSchema(JsonSchemaValidate.java:23)
at org.github.tests.ValidateGetRepo_Functionality.validateGetAllRepositories(ValidateGetRepo_Functionality.java:83)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- validateGetAllRepositories -->
  <testcase classname="org.github.tests.ValidateGetRepo_Functionality" name="validateGetRepo_InvalidRepo" time="0.742"/>
  <testcase classname="org.github.tests.ValidateGetRepo_Functionality" name="validateGetSingleRepo" time="0.434"/>
  <testcase classname="org.github.tests.ValidateAddUpdateDeleteRepo_Functionality" name="validateDeleteRepo_NonExistentRepo" time="0.381"/>
  <testcase classname="org.github.tests.ValidateAddUpdateDeleteRepo_Functionality" name="validateCreateRepoFunc_ExistingRepoName" time="0.22">
    <failure type="java.lang.AssertionError" message="create new repo functionality is failing due to :: Invalid number of path parameters. Expected 0, was 2. Redundant path parameters are: owner=RenuDix, repo=Fakercom.github.javafaker.FunnyName@3b4ef59f.">
      <![CDATA[java.lang.AssertionError: create new repo functionality is failing due to :: Invalid number of path parameters. Expected 0, was 2. Redundant path parameters are: owner=RenuDix, repo=Fakercom.github.javafaker.FunnyName@3b4ef59f.
at com.github.base.APIHelper.addData(APIHelper.java:120)
at org.github.tests.ValidateAddUpdateDeleteRepo_Functionality.validateCreateRepoFunctionality(ValidateAddUpdateDeleteRepo_Functionality.java:53)
at org.github.tests.ValidateAddUpdateDeleteRepo_Functionality.validateCreateRepoFunc_ExistingRepoName(ValidateAddUpdateDeleteRepo_Functionality.java:88)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- validateCreateRepoFunc_ExistingRepoName -->
  <testcase classname="org.github.tests.ValidateAddUpdateDeleteRepo_Functionality" name="validateCreateRepoFunctionality1" time="0.059">
    <failure type="java.lang.AssertionError" message="create new repo functionality is failing due to :: Invalid number of path parameters. Expected 0, was 2. Redundant path parameters are: owner=RenuDix, repo=Fakercom.github.javafaker.FunnyName@3b4ef59f.">
      <![CDATA[java.lang.AssertionError: create new repo functionality is failing due to :: Invalid number of path parameters. Expected 0, was 2. Redundant path parameters are: owner=RenuDix, repo=Fakercom.github.javafaker.FunnyName@3b4ef59f.
at com.github.base.APIHelper.addData(APIHelper.java:120)
at org.github.tests.ValidateAddUpdateDeleteRepo_Functionality.validateCreateRepoFunctionality(ValidateAddUpdateDeleteRepo_Functionality.java:53)
at org.github.tests.ValidateAddUpdateDeleteRepo_Functionality.validateCreateRepoFunctionality1(ValidateAddUpdateDeleteRepo_Functionality.java:79)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- validateCreateRepoFunctionality1 -->
  <testcase classname="org.github.tests.ValidateAddUpdateDeleteRepo_Functionality" name="validateDeleteRepo" time="0.062">
    <failure type="java.lang.AssertionError" message="create new repo functionality is failing due to :: Invalid number of path parameters. Expected 0, was 2. Redundant path parameters are: owner=RenuDix, repo=Fakercom.github.javafaker.FunnyName@3b4ef59f.">
      <![CDATA[java.lang.AssertionError: create new repo functionality is failing due to :: Invalid number of path parameters. Expected 0, was 2. Redundant path parameters are: owner=RenuDix, repo=Fakercom.github.javafaker.FunnyName@3b4ef59f.
at com.github.base.APIHelper.addData(APIHelper.java:120)
at org.github.tests.ValidateAddUpdateDeleteRepo_Functionality.validateCreateRepoFunctionality(ValidateAddUpdateDeleteRepo_Functionality.java:53)
at org.github.tests.ValidateAddUpdateDeleteRepo_Functionality.validateDeleteRepo(ValidateAddUpdateDeleteRepo_Functionality.java:143)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- validateDeleteRepo -->
  <testcase classname="org.github.tests.ValidateAddUpdateDeleteRepo_Functionality" name="validateUpdateRepoFunctionality" time="0.088">
    <failure type="java.lang.AssertionError" message="create new repo functionality is failing due to :: Invalid number of path parameters. Expected 0, was 2. Redundant path parameters are: owner=RenuDix, repo=Fakercom.github.javafaker.FunnyName@3b4ef59f.">
      <![CDATA[java.lang.AssertionError: create new repo functionality is failing due to :: Invalid number of path parameters. Expected 0, was 2. Redundant path parameters are: owner=RenuDix, repo=Fakercom.github.javafaker.FunnyName@3b4ef59f.
at com.github.base.APIHelper.addData(APIHelper.java:120)
at org.github.tests.ValidateAddUpdateDeleteRepo_Functionality.validateCreateRepoFunctionality(ValidateAddUpdateDeleteRepo_Functionality.java:53)
at org.github.tests.ValidateAddUpdateDeleteRepo_Functionality.validateUpdateRepoFunctionality(ValidateAddUpdateDeleteRepo_Functionality.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- validateUpdateRepoFunctionality -->
  <testcase classname="com.github.base.BaseTest" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
</testsuite> <!-- Get repo functionality -->
